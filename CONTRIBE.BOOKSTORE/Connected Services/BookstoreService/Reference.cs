//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CONTRIBE.BOOKSTORE.BookstoreService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/CONTRIBE.BOOKSTORE.MODEL.Entity")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InStock {
            get {
                return this.InStockField;
            }
            set {
                if ((this.InStockField.Equals(value) != true)) {
                    this.InStockField = value;
                    this.RaisePropertyChanged("InStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookCart", Namespace="http://schemas.datacontract.org/2004/07/CONTRIBE.BOOKSTORE.MODEL.Entity")]
    [System.SerializableAttribute()]
    public partial class BookCart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CONTRIBE.BOOKSTORE.BookstoreService.BookCartItem[] BookCartItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CONTRIBE.BOOKSTORE.BookstoreService.BookCartItem[] BookCartItems {
            get {
                return this.BookCartItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookCartItemsField, value) != true)) {
                    this.BookCartItemsField = value;
                    this.RaisePropertyChanged("BookCartItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalQuantity {
            get {
                return this.TotalQuantityField;
            }
            set {
                if ((this.TotalQuantityField.Equals(value) != true)) {
                    this.TotalQuantityField = value;
                    this.RaisePropertyChanged("TotalQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookCartItem", Namespace="http://schemas.datacontract.org/2004/07/CONTRIBE.BOOKSTORE.MODEL.Entity")]
    [System.SerializableAttribute()]
    public partial class BookCartItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CONTRIBE.BOOKSTORE.BookstoreService.Book BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CONTRIBE.BOOKSTORE.BookstoreService.Book Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDetails", Namespace="http://schemas.datacontract.org/2004/07/CONTRIBE.BOOKSTORE.MODEL.Entity")]
    [System.SerializableAttribute()]
    public partial class OrderDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CONTRIBE.BOOKSTORE.BookstoreService.BookCartItem[] NotInStockBooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CONTRIBE.BOOKSTORE.BookstoreService.BookCartItem[] PurchasedBooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CONTRIBE.BOOKSTORE.BookstoreService.BookCartItem[] NotInStockBooks {
            get {
                return this.NotInStockBooksField;
            }
            set {
                if ((object.ReferenceEquals(this.NotInStockBooksField, value) != true)) {
                    this.NotInStockBooksField = value;
                    this.RaisePropertyChanged("NotInStockBooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CONTRIBE.BOOKSTORE.BookstoreService.BookCartItem[] PurchasedBooks {
            get {
                return this.PurchasedBooksField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchasedBooksField, value) != true)) {
                    this.PurchasedBooksField = value;
                    this.RaisePropertyChanged("PurchasedBooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalQuantity {
            get {
                return this.TotalQuantityField;
            }
            set {
                if ((this.TotalQuantityField.Equals(value) != true)) {
                    this.TotalQuantityField = value;
                    this.RaisePropertyChanged("TotalQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookstoreService.IBookstoreService")]
    public interface IBookstoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/GetBooks", ReplyAction="http://tempuri.org/IBookstoreService/GetBooksResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CONTRIBE.BOOKSTORE.BookstoreService.Book))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CONTRIBE.BOOKSTORE.BookstoreService.BookCart))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CONTRIBE.BOOKSTORE.BookstoreService.BookCartItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CONTRIBE.BOOKSTORE.BookstoreService.BookCartItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails[]))]
        object[] GetBooks(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/GetBooks", ReplyAction="http://tempuri.org/IBookstoreService/GetBooksResponse")]
        System.Threading.Tasks.Task<object[]> GetBooksAsync(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/AddBook", ReplyAction="http://tempuri.org/IBookstoreService/AddBookResponse")]
        CONTRIBE.BOOKSTORE.BookstoreService.BookCart AddBook(string userID, string bookID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/AddBook", ReplyAction="http://tempuri.org/IBookstoreService/AddBookResponse")]
        System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.BookCart> AddBookAsync(string userID, string bookID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/RemoveBook", ReplyAction="http://tempuri.org/IBookstoreService/RemoveBookResponse")]
        CONTRIBE.BOOKSTORE.BookstoreService.BookCart RemoveBook(string userID, string bookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/RemoveBook", ReplyAction="http://tempuri.org/IBookstoreService/RemoveBookResponse")]
        System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.BookCart> RemoveBookAsync(string userID, string bookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/UpdateQuantity", ReplyAction="http://tempuri.org/IBookstoreService/UpdateQuantityResponse")]
        CONTRIBE.BOOKSTORE.BookstoreService.BookCart UpdateQuantity(string userID, string bookID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/UpdateQuantity", ReplyAction="http://tempuri.org/IBookstoreService/UpdateQuantityResponse")]
        System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.BookCart> UpdateQuantityAsync(string userID, string bookID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/CreateOrder", ReplyAction="http://tempuri.org/IBookstoreService/CreateOrderResponse")]
        CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails CreateOrder(string userID, CONTRIBE.BOOKSTORE.BookstoreService.BookCart bookCart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/CreateOrder", ReplyAction="http://tempuri.org/IBookstoreService/CreateOrderResponse")]
        System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails> CreateOrderAsync(string userID, CONTRIBE.BOOKSTORE.BookstoreService.BookCart bookCart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/GetOrderDetails", ReplyAction="http://tempuri.org/IBookstoreService/GetOrderDetailsResponse")]
        CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails[] GetOrderDetails(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookstoreService/GetOrderDetails", ReplyAction="http://tempuri.org/IBookstoreService/GetOrderDetailsResponse")]
        System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails[]> GetOrderDetailsAsync(string UserID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookstoreServiceChannel : CONTRIBE.BOOKSTORE.BookstoreService.IBookstoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookstoreServiceClient : System.ServiceModel.ClientBase<CONTRIBE.BOOKSTORE.BookstoreService.IBookstoreService>, CONTRIBE.BOOKSTORE.BookstoreService.IBookstoreService {
        
        public BookstoreServiceClient() {
        }
        
        public BookstoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookstoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookstoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookstoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object[] GetBooks(string searchString) {
            return base.Channel.GetBooks(searchString);
        }
        
        public System.Threading.Tasks.Task<object[]> GetBooksAsync(string searchString) {
            return base.Channel.GetBooksAsync(searchString);
        }
        
        public CONTRIBE.BOOKSTORE.BookstoreService.BookCart AddBook(string userID, string bookID, int quantity) {
            return base.Channel.AddBook(userID, bookID, quantity);
        }
        
        public System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.BookCart> AddBookAsync(string userID, string bookID, int quantity) {
            return base.Channel.AddBookAsync(userID, bookID, quantity);
        }
        
        public CONTRIBE.BOOKSTORE.BookstoreService.BookCart RemoveBook(string userID, string bookID) {
            return base.Channel.RemoveBook(userID, bookID);
        }
        
        public System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.BookCart> RemoveBookAsync(string userID, string bookID) {
            return base.Channel.RemoveBookAsync(userID, bookID);
        }
        
        public CONTRIBE.BOOKSTORE.BookstoreService.BookCart UpdateQuantity(string userID, string bookID, int quantity) {
            return base.Channel.UpdateQuantity(userID, bookID, quantity);
        }
        
        public System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.BookCart> UpdateQuantityAsync(string userID, string bookID, int quantity) {
            return base.Channel.UpdateQuantityAsync(userID, bookID, quantity);
        }
        
        public CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails CreateOrder(string userID, CONTRIBE.BOOKSTORE.BookstoreService.BookCart bookCart) {
            return base.Channel.CreateOrder(userID, bookCart);
        }
        
        public System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails> CreateOrderAsync(string userID, CONTRIBE.BOOKSTORE.BookstoreService.BookCart bookCart) {
            return base.Channel.CreateOrderAsync(userID, bookCart);
        }
        
        public CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails[] GetOrderDetails(string UserID) {
            return base.Channel.GetOrderDetails(UserID);
        }
        
        public System.Threading.Tasks.Task<CONTRIBE.BOOKSTORE.BookstoreService.OrderDetails[]> GetOrderDetailsAsync(string UserID) {
            return base.Channel.GetOrderDetailsAsync(UserID);
        }
    }
}
